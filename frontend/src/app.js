import {Router} from "./router.js";

class App { //для того, чтобы spa-приложение правильно работало, нужен роутер для перемещения по страницам (router.js)
    constructor() { //тут должно произойти что-то, когда все на странице загрузилось
        this.router = new Router(); //создаем экземпляр класса, он должен импортироваться вверху
        window.addEventListener('DOMContentLoaded', this.handleRouteChanging.bind(this)); //DOMContentLoaded - событие, когда весь
        //контент на странице загружен, далее передаем ф-цию, которая определяет на какой странице мы находимся или какую страницу открыли
        //эту ф-цию (openRoute) создадим в файле router
        window.addEventListener('popstate', this.handleRouteChanging.bind(this)); //popstate - специальное событие, которое отслеживает отображение другой страницы,
        //возникает, когда url меняется
    }

    handleRouteChanging() { //ловим изменение роута, т.е. отображение другой страницы. Можно вызывать this.router.openRoute()
        //как второй параметр в обоих слушателях в стрелочной ф,ции: 'DOMContentLoaded', ()=> {this.router.openRoute();}
        //создаем ф-цию handleRouteChanging, чтобы не дублировать код, но контекст меняется, поэтому используем bind(this)
        this.router.openRoute(); //вызываем ф-цию, когда страница загружена
    }
}

(new App()); //сразу создаем экземпляр этого класса и вызываем, сразу при загрузке главной страницы будет вызван конструктор

//Этот файл является точкой входа (ядром проекта). Он определяет на какой страницу мы находимся и, исходя из этого,
//загружает нужный компонент. Этот файл подключаем на стр index.html. Папка utils создается для хранения утилит - одиночных ф-ций
// или небольших самостоятельных кусков кода, которые в чем-то помогают, там создадим ф-цию вместо checkUserData

//т.к. это spa-приложение, то для его открытия в браузере нужен свой сервер. В терминале вводим npm init -y и далее устанавливаем сервер
//npm i http-server --save-dev. В package.json меняем test на start: "http-server". Запускаем сервер npm start и выбираем адрес.
//В файле index.html в папке templates нужно не забыть поменять адрес для кнопки, ведущей на страницу с формой на новое
//правило роутинга #/form. Браузер на таком сервере все кеширует, поэтому простая перезагрузка по факту не покажет изменения. Нужна
//жесткая со сбросом кеша или ctrl-shift-r.